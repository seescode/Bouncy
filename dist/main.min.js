(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\entities\\qumark.js":[function(require,module,exports){
'use strict';

var Qumark = function(game, x, y, cursors) {
  this.cursors = cursors;
  Phaser.Sprite.call(this, game, x, y, 'spriteSheet');
    
  this.animations.add('left', [12,13], 10, true);
  this.animations.add('right', [4,5], 10, true);
  
  this.animations.play('left');

  this.game.physics.arcade.enable(this);

  this.body.collideWorldBounds = true;
  this.body.bounce.set(1);
};

Qumark.prototype = Object.create(Phaser.Sprite.prototype);
Qumark.prototype.constructor = Qumark;


Qumark.prototype.update = function() {
  
  // check to see if our angle is less than 90
  // if it is rotate the bird towards the ground by 2.5 degrees
    
  if (this.cursors.left.isDown) {
    this.body.velocity.x = -200;
    this.animations.play('left');
  }
  else if (this.cursors.right.isDown) {
    this.body.velocity.x = 200;
    this.animations.play('right');
  }
  
};


module.exports = Qumark;
},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(800, 640, Phaser.AUTO, 'bouncy-game');

window.Utils = require('./utils');
window.playerState = {
    currentLevel: 'Game'
}

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));
game.state.add('GameOver', require('./states/gameover'));

game.state.start('Boot');

},{"./states/boot":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\boot.js","./states/game":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\game.js","./states/gameover":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\gameover.js","./states/menu":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\menu.js","./states/preloader":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\preloader.js","./states/splash":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\splash.js","./utils":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\utils.js"}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;

    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 640;
      this.game.scale.maxHeight = 480;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\game.js":[function(require,module,exports){
var Qumark = require('../entities/qumark');

var Game = function () {
  this.testentity = null;
};

module.exports = Game;

Game.prototype = {

  create: function () {
    this.cursors = this.game.input.keyboard.createCursorKeys();
    
    this.map = this.game.add.tilemap('tilemap');
    

    //'Tiles' matches what's in tilesets.name within FirstTileMap.json    
    this.map.addTilesetImage('Tiles');


    //'Tile Layer 1' matches what's in FirstTileMap.json
    this.layer = this.map.createLayer('Tile Layer 1');     
    this.layer.resizeWorld();
    //this.layer.wrap = true;
    
    this.map.createFromTiles(18, null, 'coins', 'Tile Layer 1');
    
    
    

    this.text = this.game.add.text(10, 10, '0 POINTS', { font: "12px Arial", fill: "#ff0044" });


    this.boxes = this.game.add.group();
    this.boxes.enableBody = true;
    this.physicsBodyType = Phaser.Physics.ARCADE;
    

    //this.box = this.game.add.sprite(750, 150, 'box');
    var box = this.boxes.create(750, 150, 'box');
    box.name = 'a';
    box.body.collideWorldBounds = true;
    box.body.bounce.set(1);
    box.body.velocity.x = -300;
    
    box = this.boxes.create(500, 150, 'box');
    box.name = 'b';
    box.body.collideWorldBounds = true;
    box.body.bounce.set(1);
    box.body.velocity.x = -150;

    box = this.boxes.create(300, 150, 'box');
    box.name = 'c';
    box.body.collideWorldBounds = true;
    box.body.bounce.set(1);
    box.body.velocity.x = -150;
    
    

    //this.game.physics.arcade.enable(this.box);
    
    this.game.physics.arcade.gravity.set(0, 500);
    
    
    this.qumark = new Qumark(this.game, 100, 100, this.cursors);
    this.game.camera.follow(this.qumark);
    this.game.add.existing(this.qumark);


    //this.box.body.collideWorldBounds = true;

    //this.box.body.bounce.set(1);

    //this.box.body.velocity.x = -150;
    
    //this says make tile 4,5,14,15 be collidable
    //Note that the texture map starts from index 1.
    this.map.setCollisionBetween(4, 5);
    this.map.setCollisionBetween(14, 15);
    
//     var killCoin = function(player, coin) {
//       //this.map.replace(1, 18, 1, 1);
//       //coin.index = 1;
//       coin.copy(this.map.getTile(1, 1));
//     };
// 
//     this.map.setTileIndexCallback(18, killCoin, this); 
// 
    
  },

  update: function () {
    var me = this; //TODO make more elegant solution
    
    this.game.physics.arcade.collide(this.qumark, this.layer);
    
    this.game.physics.arcade.collide(this.boxes, this.layer);
    
    this.game.physics.arcade.collide(this.qumark, this.boxes, function () {
      me.game.state.start("GameOver");
    });

  }

};

},{"../entities/qumark":"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\entities\\qumark.js"}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\gameover.js":[function(require,module,exports){
var GameOver = function() {
};

module.exports = GameOver;

GameOver.prototype = {

    create:  function () {      
        this.cursors = this.game.input.keyboard.createCursorKeys();
        this.title = this.game.add.text(10, 10, 'Game is over try again', { font: "12px Arial", fill: "#ff0044" }); 
    },
    
    update: function() {

        if (this.cursors.left.isDown) {
			this.game.state.start("Game");	
        }
        else if (this.cursors.right.isDown) {
            this.game.state.start("Game");
        }


    }

};

},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\menu.js":[function(require,module,exports){
var Menu = function () {
  this.text = null;
};

module.exports = Menu;

Menu.prototype = {

  create: function () {
    this.cursors = this.game.input.keyboard.createCursorKeys();
    this.title = this.game.add.text(10, 10, 'Bouncy!', { font: "12px Arial", fill: "#ff0044" });
  },

  update: function () {
    
    if (this.cursors.left.isDown) {
      this.game.state.start("Game");
    }
    else if (this.cursors.right.isDown) {
      this.game.state.start("Game");
    }
  }
};

},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    //this.asset = this.add.sprite(320, 240, 'preloader');
    //this.asset.anchor.setTo(0.5, 0.5);

    //this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    //this.load.setPreloadSprite(this.asset);    
    this.load.image('box', 'assets/box.bmp');
    this.load.image('qumark', 'assets/qumark.bmp');
    
    this.load.spritesheet('spriteSheet', 'assets/sheet_characters.png', 32, 32);
    
    
    this.game.load.tilemap('tilemap', 'assets/MarioTileMap.json', null, Phaser.Tilemap.TILED_JSON);
    
    //'Tiles' matches what's in tilesets.name within FirstTileMap.json
    //this.game.load.image('Tiles', 'assets/terrain_atlas.png');
    this.game.load.image('Tiles', 'assets/super_mario.png');
    
  },

  create: function () {
    console.log('hello'
    );
  },

  update: function () {
      this.game.state.start('Menu');
    
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\states\\splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\utils.js":[function(require,module,exports){
var Utils = {
    containsObject: function(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},["C:\\Users\\yong\\Documents\\GitHub\\Bouncy\\src\\js\\main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
